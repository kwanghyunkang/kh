/* css/src/basic_code_10_mbpo.css */

#wrap {
  width:1000px; height:auto;
  margin:auto; margin-bottom:500px;
  background-color: #777;
}
h1 { 
  width:100%; height:auto; 
  background-color: #ccf;
  text-align:center; font-size:1.2rem; 
}
h2 {
  width:80%; height:auto;
  margin:auto;
  border-bottom:1px solid #333;
}
.part {
  width:98%; height:auto;
  margin:auto;
  border:1px solid #333;
  background-color: #fff;
}
h3 {
  background-color: #ddd;
}
ul {
  width:100%; height:auto;
  background-color: #fcc;
}
li {
  float:left;
  width:100px; height:100px;
  background-color: #0cf;
  background-image:linear-gradient(45deg, #0cf, #05c);
  color:#fff; font-weight: 900;
}
li > a {
  display:block;
  width:100%; height:100%;
  background-color: rgba(255,255,255,0.2);
}

/* ----------------------------------------------------------------- */
/* margin */

.margin > li:nth-child(1) { margin:10px; }
.margin > li:nth-child(2) { margin:20px   40px; }
.margin > li:nth-child(3) { margin:10px   30px  50px; }
.margin > li:nth-child(4) { margin:10px   20px  30px  40px; }

.margin2 > li:nth-child(1) { margin-top:20px; margin-left:20px; }
.margin2 > li:nth-child(2) { margin-top:10px; margin-left:30px; }
.margin2 > li:nth-child(3) { 
  /* margin-left:30px;  margin-top:10px; margin-right:10px; margin-bottom:10px; */
  margin:10px; margin-left:30px; }
.margin2 > li:nth-child(4) { margin:20px; margin-top:5px; margin-right:10px; }

/* margin
  - margin : 공간 여백을 주는 속성 
  - margin:10px; -> 위,아래,오른쪽,왼쪽 모두 10px만큼 공간을 준다.
  - margin:20px 40px -> 위/아래는 20px, 왼/오는 40px
  - margin:10px 30px  50px -> 위=10px, 왼/오=30px, 아래=50px
  - margin:10px 20px  30px  40px -> 위=10px, 오=20px, 아래=30px 왼=40px

  - 단, margin 중 top부분은 float이 아니라면 부모요소 끌고 내려온다.
  - float을 적용한 상태에서는 margin이 겹치면 둘 모두 활성화
  - float이 없는 기본상태에서는 큰 값만 적용
  */

/* ------------------------------------------------------------ */
/* padding */

.padding > li:nth-child(1) { padding:10px; }
.padding > li:nth-child(2) { padding:20px 40px; }
.padding > li:nth-child(3) { padding:20px 40px 80px; }
.padding > li:nth-child(4) { padding:10px 20px 30px 40px; }
.padding > li:nth-child(5) { padding:20px; padding-left:40px; }
.padding > li:nth-child(6) { padding:20px; box-sizing:content-box; }
.padding > li:nth-child(7) { padding:20px; box-sizing:content-box; }



/* .padding > li > a { background-color: transparent; } */
/* padding
  - padding= 공간의 면적이 늘어나는 것
  - 기본 값은 margin의 개념과 똑같다.
  - padding:auto; = 없는 개념!
*/

/* ------------------------------------------------------------- */
/* border */

.border > li:nth-child(1) { 
  border-width:10px; 
  border-style:solid; /* dashed dotted double */
  border-color: #c0f
}
.border > li:nth-child(2) {
  border:10px   solid    #cfa;
}
.border > li:nth-child(3) {
  border-top:10px solid #888;
  border-right:10px solid #ff5;
}
.border > li:nth-child(4) {
  border:10px solid #eaf;
  border-top-width:5px;
  border-bottom-color: #333;
  border-left-style:dotted;
  border-right-style:dashed;
}
.border > li:nth-child(5) {
  width:0; height:0;
  border:50px solid #fff;
  border-top-color:transparent;
  border-left-color:transparent;
  border-right-color:transparent;
  background-color:transparent;
  background-image:none;
} /* 삼각형 */
.border > li:nth-child(6) {
  width:100px; height:100px;
  border:5px solid #0ff;
  box-sizing:border-box;
}

/* ------------------------------------------------------------- */
/* outline */

.outline > li:nth-child(1) {
  outline-width:20px;
  outline-style:solid;
  outline-color:#fa0;
}
.outline > li:nth-child(2) {
  outline:5px dotted  #4f4;
  border-radius: 20px;
}
.outline > li:nth-child(3) {
  outline:3px solid  #fff;
  outline-offset:-1rem;
}
.outline2 > li {
  margin-right:10px;  padding:10px; box-sizing:border-box;
  border-radius:10px;
  text-align:center; line-height:80px;
}
.outline2 > li > a:focus {
  background-color: rgba(255,255,255,0.7);
  outline:10px solid  #fff;
  color:#fff;
}

/* outline 
  - outline = margin,padding,border와 다르게 부피가 없다.
  - 눈에 보이는 형태는 크기를 가지지만, 다른 주변 요소들에게 영향을 미치지 않음.
  - outline = 형태는 존재하지만 부피는 존재하지 x, 안개같은 형상
  - outline = layout 구성에서 사용하지 않는다.
  - 접근성의 용도로 주로 사용한다. (focus를 잡는 용도)
  - outline = 오로지 4면을 모두 사용하게 되는 형태 (부분사용 x)
*/

/* focus 처리
  - 특수하게 tabindex 속성을 사용하지 않는다면
    기본은 모두 a요소 또는 form의 내부요소들이 focus 처리 가능
  - form 내부의 focus 요소 : input, button, textarea, select 등
*/
